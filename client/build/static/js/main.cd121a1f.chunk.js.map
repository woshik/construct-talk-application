{"version":3,"sources":["helper/axios.js","redux/registration/index.js","redux/authentication/index.js","redux/post/index.js","redux/rootReducer.js","redux/store.js","BaseRouter.jsx","App.jsx","index.js"],"names":["axiosInstance","axios","create","baseURL","process","userData","localStorage","getItem","JSON","parse","defaults","headers","common","token","REGISTRATION_REQUEST_SENT","REGISTRATION_REQUEST_COMPLETE","REGISTRATION_SUCCESS","REGISTRATION_FAILURE","CLEAR_ERROR","CLEAR_ALL","initialState","registered","loader","error","userRegistration","dispatch","type","post","then","catch","payload","failure","response","data","message","clearError","clearAll","registrationReducer","state","LOGIN_REQUEST_SENT","LOGIN_REQUEST_COMPLETE","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","isAuthenticated","user","userLogin","apiData","authenticationReducer","setItem","stringify","removeItem","POST_REQUEST_SENT","POST_REQUEST_COMPLETE","FETCH_POST_DATA","UPDATE_PAGE","POST_SUCCESS","POST_FAILURE","posts","success","startIndex","POSTReducer","postList","index","combineReducers","auth","reg","middleware","thunk","withDevTools","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","ProfilePage","React","lazy","HomePage","SearchPage","SettingPage","LoginPage","RegistrationPage","BaseRouter","useSelector","path","component","exact","to","App","fallback","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.cd121a1f.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst axiosInstance = axios.create({\n  baseURL: `${process.env.REACT_APP_BASE_URL}/api/v1/`,\n});\n\nlet userData = localStorage.getItem('userData');\nuserData = userData ? JSON.parse(userData) : userData;\n\nif (userData) {\n  axiosInstance.defaults.headers.common['X-Auth-Token'] = userData.token;\n}\n\nexport default axiosInstance;\n","import axiosInstance from '../../helper/axios';\n\nconst REGISTRATION_REQUEST_SENT = 'REGISTRATION_REQUEST_SENT';\nconst REGISTRATION_REQUEST_COMPLETE = 'REGISTRATION_REQUEST_COMPLETE';\nconst REGISTRATION_SUCCESS = 'REGISTRATION_SUCCESS';\nconst REGISTRATION_FAILURE = 'REGISTRATION_FAILURE';\nconst CLEAR_ERROR = 'CLEAR_ERROR';\nconst CLEAR_ALL = 'CLEAR_ALL';\n\nconst initialState = {\n  registered: false,\n  loader: false,\n  error: null,\n};\n\nconst registrationReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case REGISTRATION_REQUEST_SENT:\n      return {\n        ...state,\n        loader: true,\n      };\n    case REGISTRATION_REQUEST_COMPLETE:\n      return {\n        ...state,\n        loader: false,\n      };\n    case REGISTRATION_SUCCESS:\n      return {\n        ...state,\n        registered: true,\n        error: null,\n      };\n    case REGISTRATION_FAILURE:\n      return {\n        ...state,\n        registered: false,\n        error: payload?.error,\n      };\n    case CLEAR_ERROR:\n      return {\n        ...state,\n        error: null,\n      };\n    case CLEAR_ALL:\n      return {\n        registered: false,\n        loader: false,\n        error: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const userRegistration = (userData) => {\n  function requestSent() {\n    return {\n      type: REGISTRATION_REQUEST_SENT,\n    };\n  }\n\n  function requestComplete() {\n    return {\n      type: REGISTRATION_REQUEST_COMPLETE,\n    };\n  }\n\n  function success() {\n    return {\n      type: REGISTRATION_SUCCESS,\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: REGISTRATION_FAILURE,\n      payload: { error },\n    };\n  }\n\n  return (dispatch) => {\n    dispatch(requestSent());\n    axiosInstance\n      .post('registration', userData)\n      .then(() => {\n        dispatch(success());\n      })\n      .catch((error) => {\n        dispatch(failure(error?.response?.data?.message || 'Server Error'));\n      })\n      .then(() => {\n        dispatch(requestComplete());\n      });\n  };\n};\n\nexport const clearError = () => ({\n  type: CLEAR_ERROR,\n});\n\nexport const clearAll = () => ({\n  type: CLEAR_ALL,\n});\n\nexport default registrationReducer;\n","import axiosInstance from '../../helper/axios';\n\nconst LOGIN_REQUEST_SENT = 'LOGIN_REQUEST_SENT';\nconst LOGIN_REQUEST_COMPLETE = 'LOGIN_REQUEST_COMPLETE';\nconst LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nconst LOGIN_FAILURE = 'LOGIN_FAILURE';\nconst LOGOUT = 'LOGOUT';\nconst CLEAR_ERROR = 'CLEAR_ERROR';\n\nlet userData = localStorage.getItem('userData');\n\nuserData = userData ? JSON.parse(userData) : null;\n\nconst initialState = {\n  token: userData?.token,\n  isAuthenticated: !!userData,\n  user: userData?.userData,\n  loader: false,\n  error: null,\n};\n\nconst authenticationReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case LOGIN_REQUEST_SENT:\n      return {\n        ...state,\n        loader: true,\n      };\n    case LOGIN_REQUEST_COMPLETE:\n      return {\n        ...state,\n        loader: false,\n      };\n    case LOGIN_SUCCESS:\n      localStorage.setItem('userData', JSON.stringify(payload));\n      axiosInstance.defaults.headers.common['X-Auth-Token'] = payload?.token;\n      return {\n        ...state,\n        isAuthenticated: true,\n        token: payload?.token,\n        user: payload?.userData,\n      };\n    case LOGIN_FAILURE:\n      return {\n        ...state,\n        error: payload?.error,\n      };\n    case LOGOUT:\n      localStorage.removeItem('userData');\n      return {\n        ...state,\n        isAuthenticated: false,\n        token: null,\n        user: null,\n      };\n    case CLEAR_ERROR:\n      return {\n        ...state,\n        error: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const userLogin = (data) => {\n  function requestSent() {\n    return {\n      type: LOGIN_REQUEST_SENT,\n    };\n  }\n\n  function requestComplete() {\n    return {\n      type: LOGIN_REQUEST_COMPLETE,\n    };\n  }\n\n  function success(apiData) {\n    return {\n      type: LOGIN_SUCCESS,\n      payload: {\n        ...apiData,\n      },\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: LOGIN_FAILURE,\n      payload: { error },\n    };\n  }\n\n  return (dispatch) => {\n    dispatch(requestSent());\n    axiosInstance\n      .post('login', data)\n      .then((response) => {\n        dispatch(success(response.data));\n      })\n      .catch((error) => {\n        dispatch(failure(error?.response?.data?.message || 'Server Error'));\n      })\n      .then(() => {\n        dispatch(requestComplete());\n      });\n  };\n};\n\nexport const logout = () => ({\n  type: LOGOUT,\n});\n\nexport const clearError = () => ({\n  type: CLEAR_ERROR,\n});\n\nexport default authenticationReducer;\n","import axiosInstance from '../../helper/axios';\n\nconst POST_REQUEST_SENT = 'POST_REQUEST_SENT';\nconst POST_REQUEST_COMPLETE = 'POST_REQUEST_COMPLETE';\nconst FETCH_POST_DATA = 'FETCH_POST_DATA';\nconst UPDATE_PAGE = 'UPDATE_PAGE';\nconst POST_SUCCESS = 'POST_SUCCESS';\nconst POST_FAILURE = 'POST_FAILURE';\nconst CLEAR_ERROR = 'CLEAR_ERROR';\nconst CLEAR_ALL = 'CLEAR_ALL';\n\nconst initialState = {\n  posts: [],\n  success: false,\n  loader: false,\n  error: null,\n  startIndex: 0,\n};\n\nconst POSTReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case POST_REQUEST_SENT:\n      return {\n        ...state,\n        loader: true,\n      };\n    case POST_REQUEST_COMPLETE:\n      return {\n        ...state,\n        loader: false,\n      };\n    case POST_SUCCESS:\n      return {\n        ...state,\n        success: true,\n        error: null,\n      };\n    case POST_FAILURE:\n      return {\n        ...state,\n        success: false,\n        error: payload?.error,\n      };\n    case FETCH_POST_DATA:\n      return {\n        ...state,\n        posts: [...state.posts, ...payload.postList],\n      };\n    case UPDATE_PAGE:\n      return {\n        ...state,\n        startIndex: state.startIndex + payload.index,\n      };\n    case CLEAR_ERROR:\n      return {\n        ...state,\n        error: null,\n      };\n    case CLEAR_ALL:\n      return {\n        ...state,\n        success: false,\n        loader: false,\n        error: null,\n      };\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n\nexport const createPost = (userData) => {\n  function requestSent() {\n    return {\n      type: POST_REQUEST_SENT,\n    };\n  }\n\n  function requestComplete() {\n    return {\n      type: POST_REQUEST_COMPLETE,\n    };\n  }\n\n  function success() {\n    return {\n      type: POST_SUCCESS,\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: POST_FAILURE,\n      payload: { error },\n    };\n  }\n\n  return (dispatch) => {\n    dispatch(requestSent());\n    axiosInstance\n      .post('post', userData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      })\n      .then(() => {\n        dispatch(success());\n      })\n      .catch((error) => {\n        dispatch(failure(error?.response?.data?.message || 'Server Error'));\n      })\n      .then(() => {\n        dispatch(requestComplete());\n      });\n  };\n};\n\nexport const fetchPostData = () => (dispatch, getState) => {\n  const { post } = getState();\n\n  function completeFetch(postList) {\n    return {\n      type: FETCH_POST_DATA,\n      payload: {\n        postList,\n      },\n    };\n  }\n\n  function updatePage(index) {\n    return {\n      type: UPDATE_PAGE,\n      payload: { index },\n    };\n  }\n\n  axiosInstance\n    .get('post', {\n      params: {\n        start: post.startIndex,\n      },\n    })\n    .then(({ data }) => {\n      const posts = data?.postList ?? [];\n      dispatch(completeFetch(posts));\n      dispatch(updatePage(posts.length));\n    })\n    .catch((error) => console.log(error));\n};\n\nexport const clearError = () => ({\n  type: CLEAR_ERROR,\n});\n\nexport const clearAll = () => ({\n  type: CLEAR_ALL,\n});\n\nexport default POSTReducer;\n","import {\n  combineReducers,\n} from 'redux';\nimport authenticationReducer from './authentication';\nimport registrationReducer from './registration';\nimport POSTReducer from './post';\n\nexport default combineReducers({\n  auth: authenticationReducer,\n  reg: registrationReducer,\n  post: POSTReducer,\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './rootReducer';\n\nconst middleware = [thunk];\n\nconst withDevTools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default createStore(\n  rootReducer,\n  withDevTools(applyMiddleware(...middleware)),\n);\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\n// component lazy load\nconst ProfilePage = React.lazy(() => import('./pages/Profile'));\nconst HomePage = React.lazy(() => import('./pages/Home'));\nconst SearchPage = React.lazy(() => import('./pages/Search'));\nconst SettingPage = React.lazy(() => import('./pages/Setting'));\nconst LoginPage = React.lazy(() => import('./pages/Login'));\nconst RegistrationPage = React.lazy(() => import('./pages/Registration'));\n\nexport default function BaseRouter() {\n  const isAuthenticated = useSelector(({ auth }) => auth.isAuthenticated);\n\n  return (\n    <>\n      {isAuthenticated ? (\n        <Switch>\n          <Route path=\"/profile\" component={ProfilePage} />\n          <Route path=\"/search\" component={SearchPage} />\n          <Route path=\"/setting\" component={SettingPage} />\n          <Route exact path=\"/\" component={HomePage} />\n          <Redirect to=\"/\" />\n        </Switch>\n      ) : (\n        <Switch>\n          <Route path=\"/login\" component={LoginPage} />\n          <Route path=\"/registration\" component={RegistrationPage} />\n          <Redirect to=\"/login\" />\n        </Switch>\n      )}\n    </>\n  );\n}\n","import React, { Suspense } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport BaseRouter from './BaseRouter';\n\nfunction App() {\n  return (\n    <Suspense fallback=\"\">\n      <BrowserRouter>\n        <BaseRouter />\n      </BrowserRouter>\n    </Suspense>\n  );\n}\n\nexport default App;\n","/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from './App';\n\nimport './assets/css/custom.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}